<!-- Modification History -->

<!-- Dharmendra Kumar	11/25/2013	Initial coding to deploy package for UMB custody -->
<!-- version 2013.0.1 -->
<project name="DeployOnIIS" basedir=".." default="MachineInfo">
<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	<tstamp>
		<format property="timestamp" pattern="yyyyMMdd"/>
		<format property="timestamp-HHmm" pattern="yyyyMMdd-HHmm"/>
	</tstamp>
	
	<property file="cfg/${package}-deploy.cfg"/>
	<property name="patchdir" value="D:/PatchHolding" />
	<mkdir dir="${patchdir}/${timestamp}/log" />
	<record name="${patchdir}/${timestamp}/log/install-${timestamp-HHmm}.log" />
	<record name="${patchdir}/${timestamp}/log/install.debug-${timestamp-HHmm}.log" loglevel="verbose" />
	
	<property environment="env" />
	<property name="package" value="" />
	<property name="app" value="${installdir}" />
	<property name="emailuser" value="${env.USERNAME}@sungard.com" />
	<property name="defaultemailto" value="codemovegrp1@sungard.com" />
	<mkdir dir="${patchdir}/${timestamp}/new" />

	
	<target name="ValidateCfgFile">
		<if>
		<equals arg1="${package}" arg2="" />
		<then>
			<fail message="package property not set, please use -Dpackage=packagename option while calling ant" />
		</then>
		</if>
	</target>
	
	<target name="MachineInfo">
		<echo message="TIMESTAMP : ${timestamp-HHmm}"/>
		<echo message="SERVER    : ${env.COMPUTERNAME}" />
		<echo message="DOMAIN    : ${env.USERDOMAIN}" />
		<echo message="USER      : ${env.USERNAME}" />		
	</target>
	
	<target name="StopAppPool" if="applicationpool" >
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="appcmd stop apppool /apppool.name:${applicationpool}" />
		</exec>
	</target>
	
	<target name="StartAppPool" if="applicationpool" >
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="appcmd start apppool /apppool.name:${applicationpool}" />
		</exec>
	</target>
	
	<target name="RestartAppPool" depends="StopAppPool, StartAppPool" if="applicationpool" >
		<echo message="Restart Completed..!" />
	</target>
	
	<target name="StopService" if="servicename">
		<exec executable="cmd" failonerror="true" >
			<arg value="/c" />
			<arg value="sc stop ${servicename}" />
		</exec>
	</target>
	
	<target name="StartService" if="servicename">
		<exec executable="cmd" failonerror="true" >
			<arg value="/c" />
			<arg value="sc start ${servicename}" />
		</exec>
	</target>
	
	<target name="RestartService" depends="StopService, StartService" if="servicename">
		<echo message="Restart Completed ..!" />
	</target>
	
	<target name="BackupCurrInstall" depends="StopAppPool">
		<if>
		<available file="${patchdir}/${timestamp}/backup/${app}" type="dir" />
		<then>
			<move file="${patchdir}/${timestamp}/backup/${app}" tofile="${patchdir}/${timestamp}/backup/${app}-${timestamp-HHmm}" preservelastmodified="true" />
		</then>
		</if>
		
		<echo message="Backing up the current installation.." />
		<mkdir dir="${installroot}/${app}" />
		<copy todir="${patchdir}/${timestamp}/backup/${app}" preservelastmodified="true" overwrite="true" force="true">
			<fileset dir="${installroot}/${app}" />
		</copy>
		<delete dir="${installroot}/${app}" />
	</target>

	<target name="CopyPackage" if="packagesource">
		<copy todir="${patchdir}/${timestamp}/new" >
			<fileset dir="${packagesource}" >
				<include name="*.zip" />
			</fileset>
		</copy>
	</target>
	
	<target name="InstallNewPackage" depends="BackupCurrInstall" >
		<unzip src="${patchdir}/${timestamp}/new/${package}.zip" dest="${patchdir}/${timestamp}/new" />
		<move todir="${installroot}/${installdir}" preservelastmodified="true" >
			<fileset dir="${patchdir}/${timestamp}/new/${package}" />
		</move>
	</target>
	
	<target name="SetupConfigFiles">
		<for list="${configtosetup}" delimiter=";" param = "cfgfilewpath">
		<sequential>
		<var name="cfgfile" unset="true"/>
		<var name="cfgdir" unset="true"/>
		<var name="cfgfilewoext" unset="true"/>
		
		<basename file="${installroot}/${app}/@{cfgfilewpath}" property="cfgfile" />
		<dirname file="${installroot}/${app}/@{cfgfilewpath}" property="cfgdir" />
			<for list="${cfgfile}" delimiter="." param = "ext">
				<sequential>
					<var name="ext" unset="true"/>
					<property name="ext" value="@{ext}" />
					<property name="cfgfilewoext" value="@{ext}" />
				</sequential>
			</for>
			<move file="${cfgdir}/${cfgfilewoext}.${envprofile}.${ext}" tofile="${cfgdir}/${cfgfilewoext}.${ext}" preservelastmodified="true" force="true" />
			<echo message="Configuring ${cfgdir}/${cfgfile} completed." />
		</sequential>
		</for>
	</target>
		
	<target name="Install" depends="MachineInfo, ValidateCfgFile, StopAppPool, StopService, BackupCurrInstall, CopyPackage, InstallNewPackage, SetupConfigFiles, StartAppPool, StartService">
		<echo message="Installation Completed for ${package}." />
		<antcall target="EmailNotification" />
	</target>
	
	<target name="EmailNotification" if="emailsmtpserver">
		<mail mailhost="${emailsmtpserver}" subject="Installation Completed for ${package} on ${env.COMPUTERNAME}" from="${emailuser}" tolist="${emailtolist},${defaultemailto}" >
			<message>Installation log attached.</message>
			<attachments>
				<fileset dir="${patchdir}/${timestamp}/log">
					<include name="install-${timestamp-HHmm}.log"/>
				</fileset>
			</attachments>
		</mail>
	</target>
	
	<target name="Download">
		<echo message="Connecting to ftp server ${ftphost} :" />
		<input message="Enter ftp userid [Ex. codemove]?" addproperty="ftpuser" />
		<input message="Enter password for ${ftpuser}?" addproperty="ftppassword" />
		<input message="Enter ftp path for package [ relative to ${ftpuser} home directory ]?" addproperty="ftppath" />
		<ftp action="get" verbose="yes"
			server="${ftphost}"
			userid="${ftpuser}"
			password="${ftppassword}"
			remotedir="${ftppath}">
			<fileset dir="${patchdir}/${timestamp}/new">
				<include name="*" />
			</fileset>
		</ftp>
	</target>
</project>
